{"ast":null,"code":"var _jsxFileName = \"/Users/dhirajbalayar/Desktop/fashion/frontend/src/pages/Measure.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Measure.jsx\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport { Pose } from \"@mediapipe/pose\";\nimport { Camera } from \"@mediapipe/camera_utils\";\nimport { drawConnectors, drawLandmarks } from \"@mediapipe/drawing_utils\";\nimport PoseOverlay from \"../components/PoseOverlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst poseSteps = [\"front\", \"side\", \"back\"]; // still here if you want multi-view shots\n\nconst Measure = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [userHeight, setUserHeight] = useState(170); // cm\n  const [torsoPercent, setTorsoPercent] = useState(28); // % of total height → tunable\n  const [landmarksDetected, setLandmarksDetected] = useState(false);\n  const [measurements, setMeasurements] = useState({\n    chest: null\n  });\n  const [suggestedSize, setSuggestedSize] = useState(\"\");\n  const [capturedImages, setCapturedImages] = useState({});\n\n  // --- helpers ---\n  const getDistance = useCallback((a, b) => {\n    const dx = a.x - b.x;\n    const dy = a.y - b.y;\n    return Math.hypot(dx, dy);\n  }, []);\n  const midPoint = (a, b) => ({\n    x: (a.x + b.x) / 2,\n    y: (a.y + b.y) / 2\n  });\n\n  // Very simple T-shirt size suggestion using chest (cm)\n  const getSizeSuggestion = chest => {\n    // Adjust bands to your chart\n    if (chest >= 106) return \"XL\";\n    if (chest >= 100) return \"L\";\n    if (chest >= 94) return \"M\";\n    if (chest >= 88) return \"S\";\n    return \"Custom\";\n  };\n  const handleCapture = () => {\n    const canvas = canvasRef.current;\n    const dataUrl = canvas.toDataURL(\"image/png\");\n    const step = poseSteps[currentStep];\n    setCapturedImages(prev => ({\n      ...prev,\n      [step]: dataUrl\n    }));\n    if (currentStep < poseSteps.length - 1) setCurrentStep(s => s + 1);else alert(\"✅ All poses captured!\");\n  };\n  useEffect(() => {\n    const videoEl = videoRef.current;\n    const canvasEl = canvasRef.current;\n    const ctx = canvasEl.getContext(\"2d\");\n    const pose = new Pose({\n      locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`\n    });\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    pose.onResults(results => {\n      const lm = results.poseLandmarks;\n\n      // match canvas size to frame\n      const W = results.image.width;\n      const H = results.image.height;\n      if (canvasEl.width !== W) canvasEl.width = W;\n      if (canvasEl.height !== H) canvasEl.height = H;\n      ctx.save();\n      ctx.clearRect(0, 0, W, H);\n      ctx.drawImage(results.image, 0, 0, W, H);\n      if (lm) {\n        // draw pose for reference\n        drawConnectors(ctx, lm, Pose.POSE_CONNECTIONS, {\n          lineWidth: 2\n        });\n        drawLandmarks(ctx, lm, {\n          lineWidth: 1\n        });\n\n        // visibility helpers\n        const vis = id => {\n          var _lm$id$visibility, _lm$id;\n          return ((_lm$id$visibility = (_lm$id = lm[id]) === null || _lm$id === void 0 ? void 0 : _lm$id.visibility) !== null && _lm$id$visibility !== void 0 ? _lm$id$visibility : 0) > 0.5;\n        };\n\n        // require shoulders + at least one hip (upper-body only)\n        const shouldersOK = vis(11) && vis(12);\n        const hipsOK = vis(23) || vis(24);\n        if (shouldersOK && hipsOK) {\n          setLandmarksDetected(true);\n\n          // key points\n          const Lsh = lm[11],\n            Rsh = lm[12];\n          const Lhip = lm[23],\n            Rhip = lm[24];\n\n          // pixel distances (normalized by frame later)\n          const shoulderWidthPxN = getDistance(Lsh, Rsh); // normalized [0..1]\n          const shMid = midPoint(Lsh, Rsh);\n\n          // pick whichever hip is visible for torso height\n          const hip = vis(23) ? Lhip : Rhip;\n          const torsoPxN = getDistance(shMid, hip); // normalized torso height (shoulder mid → hip)\n\n          if (torsoPxN > 0) {\n            // Convert normalized distances to pixels\n            const shoulderWidthPx = shoulderWidthPxN * W;\n            const torsoPx = torsoPxN * H;\n\n            // Scale: assume torso is X% of total height\n            const torsoCm = userHeight * torsoPercent / 100.0; // real-world torso height in cm\n            const pxToCmRatio = torsoCm / torsoPx; // cm per pixel\n\n            // Chest circumference approximation from shoulder width (flat → circumference)\n            // Multiplier is empirical; tweak after testing with your size chart.\n            const chestFlatCm = shoulderWidthPx * pxToCmRatio;\n            const chestCircumferenceCm = chestFlatCm * 1.75; // multiplier ~1.6–1.9 typical\n\n            const chest = Number(chestCircumferenceCm.toFixed(1));\n            setMeasurements({\n              chest\n            });\n            setSuggestedSize(getSizeSuggestion(chest));\n\n            // Upper‑body guide overlay\n            ctx.fillStyle = \"rgba(0, 255, 255, 0.25)\";\n            const boxW = W * 0.6;\n            const boxH = H * 0.55;\n            ctx.fillRect((W - boxW) / 2, (H - boxH) / 2 - H * 0.05, boxW, boxH);\n          } else {\n            setLandmarksDetected(false);\n            setMeasurements({\n              chest: null\n            });\n            setSuggestedSize(\"\");\n          }\n        } else {\n          setLandmarksDetected(false);\n          setMeasurements({\n            chest: null\n          });\n          setSuggestedSize(\"\");\n        }\n      }\n      ctx.restore();\n    });\n\n    // higher resolution helps shoulder/hip stability\n    const camera = new Camera(videoEl, {\n      onFrame: async () => {\n        await pose.send({\n          image: videoEl\n        });\n      },\n      width: 1280,\n      height: 720\n    });\n    camera.start();\n    return () => {\n      camera.stop();\n    };\n  }, [getDistance, userHeight, torsoPercent, currentStep]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full min-h-screen bg-black flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-5xl flex flex-wrap items-center gap-3 justify-between px-3 pt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-white/90 text-sm\",\n          children: \"Height (cm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userHeight,\n          onChange: e => setUserHeight(Number(e.target.value)),\n          className: \"p-2 bg-white rounded shadow-md text-sm w-28\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-white/90 text-sm\",\n          children: \"Torso % of height\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: 22,\n          max: 34,\n          value: torsoPercent,\n          onChange: e => setTorsoPercent(Number(e.target.value)),\n          className: \"p-2 bg-white rounded shadow-md text-sm w-20\",\n          title: \"Typical adult torso is ~26\\u201330% of total height\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/90 px-3 py-1 rounded text-sm font-medium\",\n        children: [\"T\\u2011Shirt Mode \\u2022 Step \", currentStep + 1, \" of \", poseSteps.length, \": \", poseSteps[currentStep].toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full max-w-5xl aspect-video mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"absolute inset-0 w-full h-full object-contain bg-black\",\n        autoPlay: true,\n        muted: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"absolute inset-0 w-full h-full object-contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PoseOverlay, {\n        view: poseSteps[currentStep]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-4 left-4 text-white font-semibold text-sm sm:text-base\",\n        children: landmarksDetected ? \"✅ Upper body detected (shoulders + hip). Hold still…\" : \"🔍 Show shoulders and upper torso. Step back slightly if needed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCapture,\n        className: \"absolute bottom-4 right-4 bg-purple-600 text-white px-4 py-2 rounded shadow-md hover:bg-purple-700\",\n        children: [\"Capture \", poseSteps[currentStep].toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), measurements.chest && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-3 left-3 bg-white/90 text-black p-4 rounded-lg shadow-md text-sm w-60 z-30\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-bold mb-1\",\n          children: \"\\uD83D\\uDC55 T\\u2011Shirt Sizing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Chest (circ.): \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [measurements.chest, \" cm\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 text-purple-700 font-semibold\",\n          children: [\"Suggested Size: \", suggestedSize]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 text-xs text-gray-600\",\n          children: \"Tip: adjust \\u201CTorso %\\u201D if your angle is high/low.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), Object.keys(capturedImages).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-20 left-1/2 -translate-x-1/2 flex gap-2 z-20\",\n        children: Object.entries(capturedImages).map(([key, url]) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: `${key} view`,\n          className: \"w-16 h-24 object-cover border-2 border-white rounded\"\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(Measure, \"K8km9tOwmnjfAwEpSgNs23TWqMg=\");\n_c = Measure;\nexport default Measure;\nvar _c;\n$RefreshReg$(_c, \"Measure\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","Pose","Camera","drawConnectors","drawLandmarks","PoseOverlay","jsxDEV","_jsxDEV","poseSteps","Measure","_s","videoRef","canvasRef","currentStep","setCurrentStep","userHeight","setUserHeight","torsoPercent","setTorsoPercent","landmarksDetected","setLandmarksDetected","measurements","setMeasurements","chest","suggestedSize","setSuggestedSize","capturedImages","setCapturedImages","getDistance","a","b","dx","x","dy","y","Math","hypot","midPoint","getSizeSuggestion","handleCapture","canvas","current","dataUrl","toDataURL","step","prev","length","s","alert","videoEl","canvasEl","ctx","getContext","pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","minDetectionConfidence","minTrackingConfidence","onResults","results","lm","poseLandmarks","W","image","width","H","height","save","clearRect","drawImage","POSE_CONNECTIONS","lineWidth","vis","id","_lm$id$visibility","_lm$id","visibility","shouldersOK","hipsOK","Lsh","Rsh","Lhip","Rhip","shoulderWidthPxN","shMid","hip","torsoPxN","shoulderWidthPx","torsoPx","torsoCm","pxToCmRatio","chestFlatCm","chestCircumferenceCm","Number","toFixed","fillStyle","boxW","boxH","fillRect","restore","camera","onFrame","send","start","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","min","max","title","toUpperCase","ref","autoPlay","muted","playsInline","view","onClick","Object","keys","entries","map","key","url","src","alt","_c","$RefreshReg$"],"sources":["/Users/dhirajbalayar/Desktop/fashion/frontend/src/pages/Measure.jsx"],"sourcesContent":["// src/pages/Measure.jsx\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport { Pose } from \"@mediapipe/pose\";\nimport { Camera } from \"@mediapipe/camera_utils\";\nimport { drawConnectors, drawLandmarks } from \"@mediapipe/drawing_utils\";\nimport PoseOverlay from \"../components/PoseOverlay\";\n\nconst poseSteps = [\"front\", \"side\", \"back\"]; // still here if you want multi-view shots\n\nconst Measure = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const [currentStep, setCurrentStep] = useState(0);\n  const [userHeight, setUserHeight] = useState(170); // cm\n  const [torsoPercent, setTorsoPercent] = useState(28); // % of total height → tunable\n  const [landmarksDetected, setLandmarksDetected] = useState(false);\n\n  const [measurements, setMeasurements] = useState({ chest: null });\n  const [suggestedSize, setSuggestedSize] = useState(\"\");\n  const [capturedImages, setCapturedImages] = useState({});\n\n  // --- helpers ---\n  const getDistance = useCallback((a, b) => {\n    const dx = a.x - b.x;\n    const dy = a.y - b.y;\n    return Math.hypot(dx, dy);\n  }, []);\n\n  const midPoint = (a, b) => ({ x: (a.x + b.x) / 2, y: (a.y + b.y) / 2 });\n\n  // Very simple T-shirt size suggestion using chest (cm)\n  const getSizeSuggestion = (chest) => {\n    // Adjust bands to your chart\n    if (chest >= 106) return \"XL\";\n    if (chest >= 100) return \"L\";\n    if (chest >= 94) return \"M\";\n    if (chest >= 88) return \"S\";\n    return \"Custom\";\n  };\n\n  const handleCapture = () => {\n    const canvas = canvasRef.current;\n    const dataUrl = canvas.toDataURL(\"image/png\");\n    const step = poseSteps[currentStep];\n    setCapturedImages((prev) => ({ ...prev, [step]: dataUrl }));\n    if (currentStep < poseSteps.length - 1) setCurrentStep((s) => s + 1);\n    else alert(\"✅ All poses captured!\");\n  };\n\n  useEffect(() => {\n    const videoEl = videoRef.current;\n    const canvasEl = canvasRef.current;\n    const ctx = canvasEl.getContext(\"2d\");\n\n    const pose = new Pose({\n      locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`,\n    });\n\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n\n    pose.onResults((results) => {\n      const lm = results.poseLandmarks;\n\n      // match canvas size to frame\n      const W = results.image.width;\n      const H = results.image.height;\n      if (canvasEl.width !== W) canvasEl.width = W;\n      if (canvasEl.height !== H) canvasEl.height = H;\n\n      ctx.save();\n      ctx.clearRect(0, 0, W, H);\n      ctx.drawImage(results.image, 0, 0, W, H);\n\n      if (lm) {\n        // draw pose for reference\n        drawConnectors(ctx, lm, Pose.POSE_CONNECTIONS, { lineWidth: 2 });\n        drawLandmarks(ctx, lm, { lineWidth: 1 });\n\n        // visibility helpers\n        const vis = (id) => (lm[id]?.visibility ?? 0) > 0.5;\n\n        // require shoulders + at least one hip (upper-body only)\n        const shouldersOK = vis(11) && vis(12);\n        const hipsOK = vis(23) || vis(24);\n\n        if (shouldersOK && hipsOK) {\n          setLandmarksDetected(true);\n\n          // key points\n          const Lsh = lm[11], Rsh = lm[12];\n          const Lhip = lm[23], Rhip = lm[24];\n\n          // pixel distances (normalized by frame later)\n          const shoulderWidthPxN = getDistance(Lsh, Rsh); // normalized [0..1]\n          const shMid = midPoint(Lsh, Rsh);\n\n          // pick whichever hip is visible for torso height\n          const hip = vis(23) ? Lhip : Rhip;\n          const torsoPxN = getDistance(shMid, hip); // normalized torso height (shoulder mid → hip)\n\n          if (torsoPxN > 0) {\n            // Convert normalized distances to pixels\n            const shoulderWidthPx = shoulderWidthPxN * W;\n            const torsoPx = torsoPxN * H;\n\n            // Scale: assume torso is X% of total height\n            const torsoCm = (userHeight * torsoPercent) / 100.0; // real-world torso height in cm\n            const pxToCmRatio = torsoCm / torsoPx; // cm per pixel\n\n            // Chest circumference approximation from shoulder width (flat → circumference)\n            // Multiplier is empirical; tweak after testing with your size chart.\n            const chestFlatCm = shoulderWidthPx * pxToCmRatio;\n            const chestCircumferenceCm = chestFlatCm * 1.75; // multiplier ~1.6–1.9 typical\n\n            const chest = Number(chestCircumferenceCm.toFixed(1));\n            setMeasurements({ chest });\n            setSuggestedSize(getSizeSuggestion(chest));\n\n            // Upper‑body guide overlay\n            ctx.fillStyle = \"rgba(0, 255, 255, 0.25)\";\n            const boxW = W * 0.6;\n            const boxH = H * 0.55;\n            ctx.fillRect((W - boxW) / 2, (H - boxH) / 2 - H * 0.05, boxW, boxH);\n          } else {\n            setLandmarksDetected(false);\n            setMeasurements({ chest: null });\n            setSuggestedSize(\"\");\n          }\n        } else {\n          setLandmarksDetected(false);\n          setMeasurements({ chest: null });\n          setSuggestedSize(\"\");\n        }\n      }\n\n      ctx.restore();\n    });\n\n    // higher resolution helps shoulder/hip stability\n    const camera = new Camera(videoEl, {\n      onFrame: async () => {\n        await pose.send({ image: videoEl });\n      },\n      width: 1280,\n      height: 720,\n    });\n\n    camera.start();\n\n    return () => {\n      camera.stop();\n    };\n  }, [getDistance, userHeight, torsoPercent, currentStep]);\n\n  return (\n    <div className=\"relative w-full min-h-screen bg-black flex flex-col items-center\">\n      {/* Controls */}\n      <div className=\"w-full max-w-5xl flex flex-wrap items-center gap-3 justify-between px-3 pt-2\">\n        <div className=\"flex items-center gap-2\">\n          <label className=\"text-white/90 text-sm\">Height (cm)</label>\n          <input\n            type=\"number\"\n            value={userHeight}\n            onChange={(e) => setUserHeight(Number(e.target.value))}\n            className=\"p-2 bg-white rounded shadow-md text-sm w-28\"\n          />\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          <label className=\"text-white/90 text-sm\">Torso % of height</label>\n          <input\n            type=\"number\"\n            min={22}\n            max={34}\n            value={torsoPercent}\n            onChange={(e) => setTorsoPercent(Number(e.target.value))}\n            className=\"p-2 bg-white rounded shadow-md text-sm w-20\"\n            title=\"Typical adult torso is ~26–30% of total height\"\n          />\n        </div>\n\n        <div className=\"bg-white/90 px-3 py-1 rounded text-sm font-medium\">\n          T‑Shirt Mode • Step {currentStep + 1} of {poseSteps.length}: {poseSteps[currentStep].toUpperCase()}\n        </div>\n      </div>\n\n      {/* Camera frame (no cropping) */}\n      <div className=\"relative w-full max-w-5xl aspect-video mt-2\">\n        <video\n          ref={videoRef}\n          className=\"absolute inset-0 w-full h-full object-contain bg-black\"\n          autoPlay\n          muted\n          playsInline\n        />\n        <canvas ref={canvasRef} className=\"absolute inset-0 w-full h-full object-contain\" />\n\n        {/* Optional overlay component if you still want it */}\n        <PoseOverlay view={poseSteps[currentStep]} />\n\n        <div className=\"absolute bottom-4 left-4 text-white font-semibold text-sm sm:text-base\">\n          {landmarksDetected\n            ? \"✅ Upper body detected (shoulders + hip). Hold still…\"\n            : \"🔍 Show shoulders and upper torso. Step back slightly if needed.\"}\n        </div>\n\n        <button\n          onClick={handleCapture}\n          className=\"absolute bottom-4 right-4 bg-purple-600 text-white px-4 py-2 rounded shadow-md hover:bg-purple-700\"\n        >\n          Capture {poseSteps[currentStep].toUpperCase()}\n        </button>\n\n        {measurements.chest && (\n          <div className=\"absolute top-3 left-3 bg-white/90 text-black p-4 rounded-lg shadow-md text-sm w-60 z-30\">\n            <div className=\"text-lg font-bold mb-1\">👕 T‑Shirt Sizing</div>\n            <div>Chest (circ.): <b>{measurements.chest} cm</b></div>\n            <div className=\"mt-1 text-purple-700 font-semibold\">Suggested Size: {suggestedSize}</div>\n            <div className=\"mt-1 text-xs text-gray-600\">\n              Tip: adjust “Torso %” if your angle is high/low.\n            </div>\n          </div>\n        )}\n\n        {Object.keys(capturedImages).length > 0 && (\n          <div className=\"absolute bottom-20 left-1/2 -translate-x-1/2 flex gap-2 z-20\">\n            {Object.entries(capturedImages).map(([key, url]) => (\n              <img\n                key={key}\n                src={url}\n                alt={`${key} view`}\n                className=\"w-16 h-24 object-cover border-2 border-white rounded\"\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Measure;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}