{"ast":null,"code":"var _jsxFileName = \"/Users/dhirajbalayar/Desktop/fashion/frontend/src/pages/BodyMeasurement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as cam from '@mediapipe/camera_utils';\nimport { Pose } from '@mediapipe/pose';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BodyMeasurement = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  useEffect(() => {\n    const pose = new Pose({\n      locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`\n    });\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      smoothSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    pose.onResults(onResults);\n    if (typeof videoRef.current !== 'undefined' && videoRef.current !== null) {\n      const camera = new cam.Camera(videoRef.current, {\n        onFrame: async () => {\n          await pose.send({\n            image: videoRef.current\n          });\n        },\n        width: 640,\n        height: 480\n      });\n      camera.start();\n    }\n    function onResults(results) {\n      const canvasCtx = canvasRef.current.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      canvasCtx.drawImage(results.image, 0, 0, canvasRef.current.width, canvasRef.current.height);\n      if (results.poseLandmarks) {\n        drawConnectors(canvasCtx, results.poseLandmarks, Pose.POSE_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 2\n        });\n        drawLandmarks(canvasCtx, results.poseLandmarks, {\n          color: '#FF0000',\n          lineWidth: 1\n        });\n      }\n      canvasCtx.restore();\n      setIsReady(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100 py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-purple-700 mb-4\",\n      children: \"AI Body Measurement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-[640px] h-[480px] border rounded overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"absolute w-full h-full\",\n        autoPlay: true,\n        playsInline: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"absolute w-full h-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-gray-600\",\n      children: isReady ? \"Landmarks detected!\" : \"Loading camera...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(BodyMeasurement, \"HLx3+kG9o90esa4CefZ4jC86FWE=\");\n_c = BodyMeasurement;\nexport default BodyMeasurement;\nvar _c;\n$RefreshReg$(_c, \"BodyMeasurement\");","map":{"version":3,"names":["React","useRef","useEffect","useState","cam","Pose","drawConnectors","drawLandmarks","jsxDEV","_jsxDEV","BodyMeasurement","_s","videoRef","canvasRef","isReady","setIsReady","pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","smoothSegmentation","minDetectionConfidence","minTrackingConfidence","onResults","current","camera","Camera","onFrame","send","image","width","height","start","results","canvasCtx","getContext","save","clearRect","drawImage","poseLandmarks","POSE_CONNECTIONS","color","lineWidth","restore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","muted","_c","$RefreshReg$"],"sources":["/Users/dhirajbalayar/Desktop/fashion/frontend/src/pages/BodyMeasurement.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as cam from '@mediapipe/camera_utils';\nimport { Pose } from '@mediapipe/pose';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\n\nconst BodyMeasurement = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    const pose = new Pose({\n      locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`,\n    });\n\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      smoothSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n\n    pose.onResults(onResults);\n\n    if (typeof videoRef.current !== 'undefined' && videoRef.current !== null) {\n      const camera = new cam.Camera(videoRef.current, {\n        onFrame: async () => {\n          await pose.send({ image: videoRef.current });\n        },\n        width: 640,\n        height: 480,\n      });\n      camera.start();\n    }\n\n    function onResults(results) {\n      const canvasCtx = canvasRef.current.getContext('2d');\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      canvasCtx.drawImage(results.image, 0, 0, canvasRef.current.width, canvasRef.current.height);\n      if (results.poseLandmarks) {\n        drawConnectors(canvasCtx, results.poseLandmarks, Pose.POSE_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 2,\n        });\n        drawLandmarks(canvasCtx, results.poseLandmarks, { color: '#FF0000', lineWidth: 1 });\n      }\n      canvasCtx.restore();\n      setIsReady(true);\n    }\n  }, []);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 py-10\">\n      <h1 className=\"text-3xl font-bold text-purple-700 mb-4\">AI Body Measurement</h1>\n      <div className=\"relative w-[640px] h-[480px] border rounded overflow-hidden\">\n        <video ref={videoRef} className=\"absolute w-full h-full\" autoPlay playsInline muted />\n        <canvas ref={canvasRef} className=\"absolute w-full h-full\" />\n      </div>\n      <p className=\"mt-4 text-gray-600\">{isReady ? \"Landmarks detected!\" : \"Loading camera...\"}</p>\n    </div>\n  );\n};\n\nexport default BodyMeasurement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}