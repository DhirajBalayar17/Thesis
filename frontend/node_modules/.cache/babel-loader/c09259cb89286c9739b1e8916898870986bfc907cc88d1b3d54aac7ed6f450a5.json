{"ast":null,"code":"var _jsxFileName = \"/Users/dhirajbalayar/Desktop/fashion/frontend/src/pages/BodyMeasurementFrontView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as cam from '@mediapipe/camera_utils';\nimport { Pose } from '@mediapipe/pose';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BodyMeasurementFrontView = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [landmarksDetected, setLandmarksDetected] = useState(false);\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext('2d');\n    const pose = new Pose({\n      locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`\n    });\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    pose.onResults(results => {\n      if (!canvasElement || !canvasCtx) return;\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n      canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n      if (results.poseLandmarks) {\n        drawConnectors(canvasCtx, results.poseLandmarks, Pose.POSE_CONNECTIONS, {\n          color: 'red',\n          lineWidth: 2\n        });\n        drawLandmarks(canvasCtx, results.poseLandmarks, {\n          color: 'red',\n          radius: 5\n        });\n        setLandmarksDetected(true);\n      } else {\n        setLandmarksDetected(false);\n      }\n      canvasCtx.restore();\n    });\n    const startCamera = async () => {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 640,\n          height: 480\n        }\n      });\n      videoElement.srcObject = stream;\n      videoElement.play();\n      const camera = new cam.Camera(videoElement, {\n        onFrame: async () => {\n          await pose.send({\n            image: videoElement\n          });\n        },\n        width: 640,\n        height: 480\n      });\n      camera.start();\n    };\n    startCamera();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-purple-700 mb-4\",\n      children: \"AI Body Measurement (Front View)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-[640px] h-[480px]\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"absolute w-full h-full rounded\",\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"absolute w-full h-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-gray-600\",\n      children: landmarksDetected ? 'Landmarks detected!' : 'Looking for landmarks...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(BodyMeasurementFrontView, \"VatzpivZdkw7JU3T6icaRL8bYa0=\");\n_c = BodyMeasurementFrontView;\nexport default BodyMeasurementFrontView;\nvar _c;\n$RefreshReg$(_c, \"BodyMeasurementFrontView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","cam","Pose","drawConnectors","drawLandmarks","jsxDEV","_jsxDEV","BodyMeasurementFrontView","_s","videoRef","canvasRef","landmarksDetected","setLandmarksDetected","videoElement","current","canvasElement","canvasCtx","getContext","pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","minDetectionConfidence","minTrackingConfidence","onResults","results","save","clearRect","width","height","drawImage","image","poseLandmarks","POSE_CONNECTIONS","color","lineWidth","radius","restore","startCamera","stream","navigator","mediaDevices","getUserMedia","video","srcObject","play","camera","Camera","onFrame","send","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","playsInline","_c","$RefreshReg$"],"sources":["/Users/dhirajbalayar/Desktop/fashion/frontend/src/pages/BodyMeasurementFrontView.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as cam from '@mediapipe/camera_utils';\nimport { Pose } from '@mediapipe/pose';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\n\nconst BodyMeasurementFrontView = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [landmarksDetected, setLandmarksDetected] = useState(false);\n\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext('2d');\n\n    const pose = new Pose({\n      locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`,\n    });\n\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n\n    pose.onResults((results) => {\n      if (!canvasElement || !canvasCtx) return;\n\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n      canvasCtx.drawImage(\n        results.image,\n        0,\n        0,\n        canvasElement.width,\n        canvasElement.height\n      );\n\n      if (results.poseLandmarks) {\n        drawConnectors(canvasCtx, results.poseLandmarks, Pose.POSE_CONNECTIONS, {\n          color: 'red',\n          lineWidth: 2,\n        });\n        drawLandmarks(canvasCtx, results.poseLandmarks, {\n          color: 'red',\n          radius: 5,\n        });\n        setLandmarksDetected(true);\n      } else {\n        setLandmarksDetected(false);\n      }\n\n      canvasCtx.restore();\n    });\n\n    const startCamera = async () => {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: { width: 640, height: 480 },\n      });\n\n      videoElement.srcObject = stream;\n      videoElement.play();\n\n      const camera = new cam.Camera(videoElement, {\n        onFrame: async () => {\n          await pose.send({ image: videoElement });\n        },\n        width: 640,\n        height: 480,\n      });\n\n      camera.start();\n    };\n\n    startCamera();\n  }, []);\n\n  return (\n    <section className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\">\n      <h2 className=\"text-3xl font-bold text-purple-700 mb-4\">\n        AI Body Measurement (Front View)\n      </h2>\n\n      <div className=\"relative w-[640px] h-[480px]\">\n        <video ref={videoRef} className=\"absolute w-full h-full rounded\" playsInline />\n        <canvas ref={canvasRef} className=\"absolute w-full h-full\" />\n      </div>\n\n      <p className=\"mt-4 text-gray-600\">\n        {landmarksDetected ? 'Landmarks detected!' : 'Looking for landmarks...'}\n      </p>\n    </section>\n  );\n};\n\nexport default BodyMeasurementFrontView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}